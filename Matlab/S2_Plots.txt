### **Detailed and Specific Analysis for Practical No. 2**  
**Introduction to MATLAB (In-built Functions, 2D/3D Plots, Creating Simple Programs)**

---

### **Topics Covered**  

#### **1. In-built Functions**  
**Purpose**: To perform standard mathematical, statistical, and matrix operations efficiently.

- **Mathematical Functions**:  
  - `sqrt(x)`: Square root of `x`.  
  - `log(x)`: Natural logarithm of `x`.  
  - `exp(x)`: Exponential (`e^x`).  
  - `sin(x)`, `cos(x)`, `tan(x)`: Trigonometric functions (in radians).  

- **Statistical Functions**:  
  - `mean(A)`: Mean of elements in matrix `A`.  
  - `sum(A)`: Sum of all elements or specific rows/columns.  
  - `std(A)`: Standard deviation.  

- **Matrix Operations**:  
  - `det(A)`: Determinant of matrix `A`.  
  - `inv(A)`: Inverse of matrix `A` (if non-singular).  
  - `eig(A)`: Eigenvalues of `A`.  

**Example**:  
```matlab
A = [1, 2, 3; 4, 5, 6; 7, 8, 9];
disp('Determinant of A:'), disp(det(A));
disp('Inverse of A:'), disp(inv(A));
disp('Eigenvalues of A:'), disp(eig(A));
```

---

#### **2. 2D Plots**  
**Purpose**: To visualize data and functions effectively.

- **Basic Plotting**:  
  - `plot(x, y)`: Creates a 2D line plot.  
  - Customize: Line styles (`'-'`, `'--'`), markers (`'o'`, `'x'`), colors (`'r'`, `'b'`).  

- **Enhancements**:  
  - `title('Text')`: Add a title.  
  - `xlabel('Text')`, `ylabel('Text')`: Label axes.  
  - `legend('Label1', 'Label2')`: Add legends.  
  - `grid on`: Display gridlines.

**Example**:  
```matlab
x = 0:0.1:10; % Range of x values
y = sin(x); % y = sin(x)
plot(x, y, '-r', 'LineWidth', 2);
title('Sine Function');
xlabel('x-axis');
ylabel('y-axis');
grid on;
```

---

#### **3. 3D Plots**  
**Purpose**: To visualize 3D data and functions.  

- **Plot Types**:  
  - `plot3(x, y, z)`: Line plot in 3D space.  
  - `mesh(X, Y, Z)`: Wireframe surface plot.  
  - `surf(X, Y, Z)`: Colored surface plot.  

- **Enhancements**:  
  - `colorbar`: Add color scale to the plot.  
  - `view([az, el])`: Adjust viewing angle (azimuth, elevation).  

**Example**:  
```matlab
[x, y] = meshgrid(-2:0.1:2, -2:0.1:2); % Create grid
z = x.^2 + y.^2; % Define function
surf(x, y, z); % Plot surface
colorbar;
title('3D Surface Plot');
xlabel('x-axis');
ylabel('y-axis');
zlabel('z-axis');
```

---

#### **4. Creating Simple Programs**  
**Purpose**: Combine computations and visualizations into MATLAB scripts.  

- **Structure**:  
  - Start with `clear`, `clc` for cleanliness.  
  - Define variables and equations.  
  - Use loops (`for`, `while`) and conditional statements (`if`, `else`).  
  - Generate plots or display results.

**Example**:  
```matlab
% Program to plot a parabola and compute its vertex
clear; clc;
x = -10:1:10;
y = x.^2 - 4*x + 3; % Define parabola

% Compute vertex
a = 1; b = -4; c = 3; % Coefficients
x_vertex = -b/(2*a);
y_vertex = a*x_vertex^2 + b*x_vertex + c;

% Plot parabola
plot(x, y, 'b-o');
hold on;
plot(x_vertex, y_vertex, 'r*', 'MarkerSize', 10);
hold off;
title('Parabola with Vertex');
xlabel('x-axis');
ylabel('y-axis');
grid on;
```

---

### **Expected Outcomes**  
1. Mastery of in-built MATLAB functions for mathematical and matrix operations.  
2. Ability to generate and customize 2D and 3D plots.  
3. Creation of simple scripts to solve engineering-related problems with visualizations.  

This practical provides essential skills for using MATLAB to analyze data and develop computational tools in engineering.
